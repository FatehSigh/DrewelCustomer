package com.os.drewel.utill

import android.app.ProgressDialog
import android.content.ContentResolver
import android.content.Context
import android.content.res.Resources
import android.database.Cursor
import android.graphics.Bitmap
import android.graphics.BitmapFactory
import android.graphics.Color
import android.graphics.Matrix
import android.graphics.drawable.ColorDrawable
import android.media.ExifInterface
import android.net.Uri
import android.os.Environment
import android.provider.MediaStore
import android.support.annotation.RawRes
import android.text.Spannable
import android.text.SpannableStringBuilder
import android.text.format.DateFormat
import android.text.style.ForegroundColorSpan
import android.util.DisplayMetrics
import android.util.Log

import com.google.android.gms.common.ConnectionResult
import com.os.drewel.R
import java.io.BufferedReader
import java.io.File
import java.io.FileNotFoundException
import java.io.FileOutputStream
import java.io.IOException
import java.io.InputStream
import java.io.InputStreamReader
import java.io.Reader
import java.io.StringWriter
import java.io.Writer
import java.text.ParseException
import java.text.SimpleDateFormat
import java.util.Calendar
import java.util.Date

import android.provider.MediaStore.Files.FileColumns.MEDIA_TYPE_VIDEO

object CommonUtil {



    fun showLoadingDialog(context: Context): ProgressDialog {
        val progressDialog = ProgressDialog(context)
        progressDialog.show()
        if (progressDialog.window != null) {
            progressDialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
        }
        progressDialog.setContentView(R.layout.progress_dialog_loading)
        //        progressDialog.setContentView(R.layout.progress_dialog_logo_loading);
        //        ((AnimationDrawable) (progressDialog.findViewById(R.id.progress_dialog_logo_iv_e_1)).getBackground()).start();
        progressDialog.isIndeterminate = true
        progressDialog.setCancelable(false)
        progressDialog.setCanceledOnTouchOutside(false)
        return progressDialog
    }

    fun showLoadingDialog(context: Context, message: String): ProgressDialog {
        val progressDialog = ProgressDialog(context)
        progressDialog.show()
        if (progressDialog.window != null) {
            progressDialog.window!!.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
        }
        progressDialog.setContentView(R.layout.progress_dialog_loading)
        //        progressDialog.setContentView(R.layout.progress_dialog_logo_loading);
        //        ((TextView) progressDialog.findViewById(R.id.progress_dialog_logo_tv_message)).setText(message);
        progressDialog.isIndeterminate = true
        progressDialog.setCancelable(false)
        progressDialog.setCanceledOnTouchOutside(false)
        return progressDialog
    }
}